package action.ch6.ex2

/**
 * 컬렉션
 *
 * List<Int?> : 리스트 안의 값이 null이 될 수 있다.
 * List<Int>? : 전체 리스트가 null이 될 수 있다.
 */

/**
 * 코틀린 컬렉션과 자바 컬렉션을 나누는 가장 중요한 특성 중 하나는 코틀린에서는 컬렉션 안의 데이터에 접근하는 인터페이스와
 * 컬렉션 안의 데이터를 변경하는 인터페이스를 분리했다는 점이다.
 * 기초 인터페이스인 kotlin.collections.Collection은 읽기만 가능하고,
 * kotlin.collections.MutableCollection 인터페이스를 사용해야 컬렉션 데이터 변경(add, remove, clear)이 가능하다.
 */

/**
 * 어떤 동일한 컬렉션 객체를 가리키는 읽기 전용 컬렉션 타입의 참조와 변경 가능한 컬렉션 타입의 참조가 있는 경우,
 * 이 컬렉션을 참조하는 다른 코드를 호출하거나 병렬 실행한다면
 * 컬렉션을 사용하는 도중에 다른 컬렉션이 그 컬렉션의 내용을 변경하는 상황이 생길 수 있고,
 * 이런 상황에서는 ConcurrentModificationException이나 다른 오류가 발생할 수 있다.
 *
 * 따라서 읽기 전용 컬렉션이 항상 Thread Safe하지 않다는 점을 명심해야 한다.
 * 다중 스레드 환경에서 데이터를 다루는 경우 그 데이터를 적절히 동기화하거나 동시 접근을 허용하는 데이터 구조를 활용해야 한다.
 */
